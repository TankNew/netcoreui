worker_processes 1;

#最大并发数
events { worker_connections 1024; }

http {
    ##
    # Basic Settings
    ##
    # 指定是否使用sendfile系统调用来传输文件
    sendfile on;
    #只有在启用了 sendfile 之后才生效。启用它之后，数据包会累计到一定大小之后才会发送，减小了额外开销，提高网络效率。
    tcp_nopush on;
    #启用后会禁用 Nagle 算法，尽快发送数据，某些情况下可以节约 200ms
    tcp_nodelay on;
    #Nginx 的默认值是 75 秒
    keepalive_timeout 75;
    # types_hash_max_size 影响散列表的冲突率。types_hash_max_size越大，就会消耗更多的内存，但散列key的冲突率会降低，检索速度就更快。types_hash_max_size越小，消耗的内存就越小，但散列key的冲突率可能上升。
    types_hash_max_size 2048;
    #加载 mime 文件后缀映射文件
    include /etc/nginx/mime.types;
    # 默认 MIME type
    default_type application/octet-stream;
    # 请求标头字段中启用或禁用下划线
    underscores_in_headers on;
    #控制是否应忽略名称无效的标题字段
    ignore_invalid_headers off;
    ##
    # Logging Settings
    ##

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_disable "msie6";
    # 0-9 等级，gzip压缩比，1 压缩比最小处理速度最快，9 压缩比最大但处理最慢（传输快但比较消耗cpu）。
    gzip_comp_level 6;
    #建议设置成大于1k的字节数，小于1k可能会越压越大。 即: gzip_min_length 1024
    gzip_min_length 1000;
    gzip_types text/css application/javascript;

    server {
        listen 80;
        listen 443;
        server_name cnc163.com;

        root /usr/share/nginx/html/;

        location / {
            index index.html index.htm;
            # 防止重刷新返回404
            try_files $uri $uri/ /index.html;
            # 禁止缓存 HTML，以保证引用最新的 CSS 和 JS 资源
            # expires -1;
       }
    }
}